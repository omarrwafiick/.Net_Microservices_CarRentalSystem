// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentService.Data;

#nullable disable

namespace PaymentServiceApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250419210906_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaymentService.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PaymentStatusId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PaymentServiceApi.Models.PaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("834f2b0f-08b8-442a-93b0-42b800b86f5b"),
                            Name = "CreditCard"
                        },
                        new
                        {
                            Id = new Guid("156176c7-8c61-471f-8506-692908c67e3a"),
                            Name = "DebitCard"
                        },
                        new
                        {
                            Id = new Guid("80ed4864-e53f-4b54-a460-723a9642aadb"),
                            Name = "PayPal"
                        },
                        new
                        {
                            Id = new Guid("edf135bd-4a54-4376-a7cb-52cef8ea7724"),
                            Name = "Wallet"
                        });
                });

            modelBuilder.Entity("PaymentServiceApi.Models.PaymentStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b050bb3a-ebd7-490e-8c38-1033d5ee3129"),
                            Status = "Pending"
                        },
                        new
                        {
                            Id = new Guid("16d2404f-e6ed-492d-ae7a-f0bf628b75ea"),
                            Status = "Completed"
                        },
                        new
                        {
                            Id = new Guid("54d08e72-a247-4703-8f03-c63cfae0eef3"),
                            Status = "Failed"
                        });
                });

            modelBuilder.Entity("PaymentService.Models.Payment", b =>
                {
                    b.HasOne("PaymentServiceApi.Models.PaymentMethod", "Method")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentServiceApi.Models.PaymentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
